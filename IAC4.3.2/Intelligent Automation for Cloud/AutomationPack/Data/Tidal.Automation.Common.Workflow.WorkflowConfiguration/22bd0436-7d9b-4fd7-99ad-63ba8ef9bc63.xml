<?xml version="1.0"?>
<WorkflowConfiguration xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xml:space="preserve">
  <Id>22bd0436-7d9b-4fd7-99ad-63ba8ef9bc63</Id>
  <DisplayName>Enumerate Portgroups</DisplayName>
  <VersionNumber>2</VersionNumber>
  <CreatedTime>2016-02-15T20:42:10.33275Z</CreatedTime>
  <ModifiedTime>2016-04-07T01:39:07.0234375Z</ModifiedTime>
  <FirstActivity xsi:type="RootNode">
    <Id>e2cd8d1f-79aa-4882-a32f-71fd10728a08</Id>
    <DisplayName />
    <Children>
      <ActivityNode xsi:type="ExecuteActivityNode">
        <Id>639272c7-74a8-4945-88dc-2a2c3cfddd28</Id>
        <DisplayName>Execute PowerCLI</DisplayName>
        <Children>
          <ActivityNode xsi:type="ConditionBranchNode">
            <Id>402f0b25-f944-44bc-a20d-b1f4772a7813</Id>
            <DisplayName>Instance Failed</DisplayName>
            <Children>
              <ActivityNode xsi:type="ExecuteActivityNode">
                <Id>e19ed426-1e01-4686-b8f8-542f00f767b8</Id>
                <DisplayName>Unable to execute PowerCLI (5003)</DisplayName>
                <Children>
                  <ActivityNode xsi:type="FailedBranchPlaceholderNode">
                    <Id>0aed1ad6-6b8c-4289-a625-dc8bc85cacb1</Id>
                    <ActivityNodeId>e19ed426-1e01-4686-b8f8-542f00f767b8</ActivityNodeId>
                    <CompletedId>a224cedd-1f78-4bc2-94f9-049d10395aa1</CompletedId>
                  </ActivityNode>
                </Children>
                <Configuration xsi:type="SetVariableActivityConfiguration" xml:space="preserve">
                  <Id>e19ed426-1e01-4686-b8f8-542f00f767b8</Id>
                  <DisplayName>Unable to execute PowerCLI (5003)</DisplayName>
                  <TargetLoadBalancer xsi:type="SingleTargetLoadBalancer">
                    <SingleTargetId>
                      <HardcodedValue>bd4b3145-4e20-42bb-ba8f-34c013ca86cc</HardcodedValue>
                    </SingleTargetId>
                  </TargetLoadBalancer>
                  <InheritTarget>false</InheritTarget>
                  <ContainingProcessId>7d3fcc89-299d-4f93-bf85-791085224602</ContainingProcessId>
                  <VariableToSet>
                    <DisplayPath>Process.Variables.Output.Error Code</DisplayPath>
                    <LinkChain />
                    <ObjectId>7a0ea958-e24e-4ffe-a800-f127d24d0613</ObjectId>
                    <ObjectType>GlobalVariable</ObjectType>
                  </VariableToSet>
                  <NewValue xsi:type="SubstitutableNumber">
                    <HardcodedValue>5003</HardcodedValue>
                  </NewValue>
                </Configuration>
              </ActivityNode>
              <ActivityNode xsi:type="CompletedNode">
                <Id>73e77ca1-3dfc-4f4d-81bb-83e5e1f1a78f</Id>
                <CompletedType>Failed</CompletedType>
                <ResultMessage>
                  <FormattedCode>{0}</FormattedCode>
                  <References>
                    <VariableReference xsi:type="PropertyReference">
                      <DisplayPath>Workflow.Execute PowerCLI.Output</DisplayPath>
                      <LinkChain>
                        <Link xsi:type="PropertyNameLink">
                          <PropertyName>Output</PropertyName>
                        </Link>
                      </LinkChain>
                      <ObjectId>639272c7-74a8-4945-88dc-2a2c3cfddd28</ObjectId>
                      <ObjectType>ActivityInstance</ObjectType>
                    </VariableReference>
                  </References>
                </ResultMessage>
              </ActivityNode>
            </Children>
            <Condition>
              <Id>6695eb40-c87e-4a11-9bde-5fba2adfc4cb</Id>
              <Conditions>
                <ConditionDefinition xsi:type="VariableConditionDefinition">
                  <Id>accd6ba3-68a8-4079-bf98-51efac8d8db4</Id>
                  <Expression xsi:type="SubstitutableBoolean">
                    <HardcodedValue>true</HardcodedValue>
                  </Expression>
                  <Comparison>Equals</Comparison>
                  <VariableReference xsi:type="PropertyReference">
                    <DisplayPath>Workflow.Execute PowerCLI.Instance Failed</DisplayPath>
                    <LinkChain>
                      <Link xsi:type="PropertyNameLink">
                        <PropertyName>InstanceFailed</PropertyName>
                      </Link>
                    </LinkChain>
                    <ObjectId>639272c7-74a8-4945-88dc-2a2c3cfddd28</ObjectId>
                    <ObjectType>ActivityInstance</ObjectType>
                  </VariableReference>
                </ConditionDefinition>
              </Conditions>
            </Condition>
          </ActivityNode>
        </Children>
        <Configuration xsi:type="WindowsPowerShellScriptActivityConfiguration" xml:space="preserve">
          <Id>639272c7-74a8-4945-88dc-2a2c3cfddd28</Id>
          <DisplayName>Execute PowerCLI</DisplayName>
          <TargetLoadBalancer xsi:type="OrchestratorServerLoadBalancer">
            <TargetGroupId>bc5933b4-512f-46ce-86a9-3b40331ba395</TargetGroupId>
          </TargetLoadBalancer>
          <InheritTarget>false</InheritTarget>
          <ContainingProcessId>7d3fcc89-299d-4f93-bf85-791085224602</ContainingProcessId>
          <WorkingDirectory>
            <HardcodedValue />
          </WorkingDirectory>
          <FailReturnCodeNonZero>true</FailReturnCodeNonZero>
          <UseTaskScheduler>true</UseTaskScheduler>
          <TimeWindow>
            <Milliseconds>3600000</Milliseconds>
            <Units>Minutes</Units>
          </TimeWindow>
          <Script>
            <HardcodedValue># this is the new form with revised collection mechanisms.
param(
  [String]$vCenterAddress
 ,[String]$vCenterProtocol
 ,[String]$vCenterPort
 ,[String]$vCenterUsername
 ,[String]$vCenterPassword
 ,[String]$Datacenter
)

trap { 
  "`nError Information`n=================`nCategory: {0}`nID: {2}`nType: {1}`nMessage: {3}" -f
  $_.CategoryInfo.Category, $_.Exception.GetType().FullName,
  $_.FullyQualifiedErrorID, $_.Exception.Message
  $_.ErrorDetails
  $_
  $LASTEXITCODE = 0
  $ERROR.clear()
  exit 0
}

$ErrorActionPreference = "Stop"

Add-PSSnapin VMware.VimAutomation.Core

Connect-VIServer -Server $vCenterAddress -Port $vCenterPort -Protocol $vCenterProtocol -User $vCenterUsername -Password $vCenterPassword -WarningAction SilentlyContinue | Out-Null

$start = get-date

# force locale to en_US
$si = Get-View ServiceInstance
$sm = Get-View $si.Content.SessionManager
$sm.SetLocale( "en_US" )

try {
  $ErrorActionPreference = "Stop"

  # start function
  function Get-InventoryPath {
    param ($Object)
    $Path = $Object.Name
    do {
      if ($Object.Id -cmatch "Folder") {
        $Parent = (Get-Folder $Object).parent
      } 
      else {
        $Parent = (Get-View $Object).parent
        if ( $Parent -cmatch "Folder" ) {
          $foldermark = 1
        }
        elseif ( $foldermark ) {
          # a non-folder just to the left of a folder:
          # remove the folder off the start of the path
          # this will also remove the Datacenters/
          $Path = ( $Path.split( '/', 2 ) )[-1]
          $foldermark = 0
        }
      }
      if ($Parent -ne $null) { 
        if ($Parent.Id -cmatch "Folder") {
          $Path = (Get-Folder $Parent).Name + "/" + $Path
        } 
        else {
          $Path = (Get-View $Parent).Name + "/" + $Path
        }
        $Object = $Parent
      }
    } while ($Parent -ne $null)
    
    Write-Output $Path
  }
  # end function

  $vmdc = @{}     # hash of Network/Datacenter relationship
  $vmh = @{}      # hash of Host/Datacenter relationship
  $clusters = @{}      # hash of Host/Cluster relationship
  $dcpath = @{}   # hash of datacenter paths
  $dcs = Get-Datacenter $Datacenter
  if ( $dcs ) {
    $dcs | Foreach-Object {
      $dc = $_
      $dcmoref = $dc.ExtensionData.Moref.Value
      $dc.ExtensionData.Network | Foreach-Object {
        if ( $_.Value -ne $null ) {
          $vmdc.Add( $_.Value, $dcmoref )
        }
      }
      $vhs = $dc | Get-VMHost
      if ( $vhs ) {
        $vhs | Foreach-Object {
          $vmh.Add( $_.ExtensionData.Moref.Value, $dcmoref )
          $clusters.Add( $_.ExtensionData.Moref.Value, $_.ExtensionData.Parent.Value )
        }
      }
      $dcpath.Add( $dcmoref, ( Get-InventoryPath $dc ) )
    }
  }

  $startcollect = get-date
  Write-Output '&lt;results&gt;'  
  Write-Output '  &lt;sanityMark&gt;pass&lt;/sanityMark&gt;'  

  $vhosts = $dcs | Get-VMHost

  Foreach ( $vhost in $vhosts ) {
    $clusterid = $vhost.ParentId
    $clusterid = $clusterid.split( '-', 2 )[-1]
    # example: ClusterComputeResource-domain-c10997

    # Standard networks
    $spg = Get-VirtualPortGroup -Standard -VMHost $vhost

    if ( $spg.Count -gt 0 ) {
      $vpgs = Get-VirtualPortGroup -Standard -VMHost $vhost
      $vpgs | Foreach-Object {
        $standard_rowcount++
        $rowcount++
        $hostid = $vhost.ExtensionData.Moref.Value
        $thisdc = $vmh.( $vhost.ExtensionData.Moref.Value )
        $thisdcfull = "Datacenter-$thisdc"

        Write-Output '  &lt;row&gt;'
        [System.String]::Concat('    &lt;NetworkName&gt;&lt;![CDATA[',$_.Name,']]&gt;&lt;/NetworkName&gt;')
        [System.String]::Concat('    &lt;NetworkPath&gt;&lt;![CDATA[',$dcpath.$thisdc,'/',$_.Name,']]&gt;&lt;/NetworkPath&gt;')
        [System.String]::Concat('    &lt;Datacenter&gt;',$thisdc,'&lt;/Datacenter&gt;')
        [System.String]::Concat("    &lt;Moref&gt;",$_.Key,'&lt;/Moref&gt;')
        [System.String]::Concat('    &lt;PortgroupType&gt;Standard&lt;/PortgroupType&gt;')
        [System.String]::Concat('    &lt;UniqueID&gt;',$hostid,':',$_.Key,'&lt;/UniqueID&gt;')
        [System.String]::Concat('    &lt;PortgroupID&gt;',$_.Key,'&lt;/PortgroupID&gt;')
        [System.String]::Concat('    &lt;VlanID&gt;',$_.VlanId,'&lt;/VlanID&gt;')
        [System.String]::Concat('    &lt;ClusterID&gt;',$clusterid,'&lt;/ClusterID&gt;')
        [System.String]::Concat('    &lt;VMHostID&gt;',$hostid,'&lt;/VMHostID&gt;')
        # vSwitchUUID is blank for -Standard
        [System.String]::Concat('    &lt;vSwitchID&gt;NA&lt;/vSwitchID&gt;')
        [System.String]::Concat('    &lt;vSwitchName&gt;&lt;![CDATA[',$_.VirtualSwitchName,']]&gt;&lt;/vSwitchName&gt;')
        [System.String]::Concat('    &lt;vSwitchUUID&gt;NA&lt;/vSwitchUUID&gt;')
        
        Write-Output '  &lt;/row&gt;'
      }
    }

  } # end Foreach vmhost Standard networks

  # Distributed networks
  $update_path = $false
  foreach ( $dc in $dcs ) {
#     $vsd = Get-Datacenter -Name IA-UCS-700 | Get-VDSwitch
    $vsd = Get-VirtualSwitch -Distributed -Datacenter $dc
    $vsd | Foreach-Object {
      $thisvs = $_
      $uuid = $_.ExtensionData.Uuid
      $update_path = $true
      if ( $thisvs -ne $null ) {
        $thisvsname = $thisvs.Name 
        $thisvs | Foreach-Object {
          try{
            # use the object, not the name string
            $vpgd = Get-VirtualPortGroup -VirtualSwitch $_
            # this was previous.  Do we need to have a switch here based on
            # powercli version?
#             $vpgd = Get-VirtualPortGroup -VirtualSwitch $_.Name
          }
          catch {
            $vpgd = $null
          }
          if ( $vpgd -ne $null ) {
            $vpgd | Foreach-Object {
              $thisvpgd = $_
              $networkname = $thisvpgd.Name
# verify that the network path can be calculated this way
              if ( $update_path -eq $true ) {
                $networkpath = Get-InventoryPath $thisvpgd
                $update_path = $false
              }
              $escnetworkname = [regex]::escape( $networkname )
              $networkpath = $networkpath -replace $escnetworkname, "$thisvsname/"
#               $networkpath = $networkpath -replace $escnetworkname, "$thisvsname/$networkname"

              # per host...
              $thisvpgd.ExtensionData.Host | Foreach-Object {
                $hostid = $_.Value
                $distributed_rowcount++
                $rowcount++

                Write-Output '  &lt;row&gt;'
                try   { $vswitch_id = $thisvpgd.VirtualSwitch.Id.Substring( 31 ) }
                catch { $vswitch_id = '' }
                [System.String]::Concat('    &lt;NetworkName&gt;&lt;![CDATA[',$networkname,']]&gt;&lt;/NetworkName&gt;')
                [System.String]::Concat('    &lt;NetworkPath&gt;&lt;![CDATA[',$networkpath,$networkname,']]&gt;&lt;/NetworkPath&gt;')
                [System.String]::Concat("    &lt;Datacenter&gt;",$vmdc.( $thisvpgd.Key ),'&lt;/Datacenter&gt;')
                [System.String]::Concat('    &lt;Moref&gt;',$thisvpgd.Key,'&lt;/Moref&gt;')
                [System.String]::Concat('    &lt;PortgroupType&gt;Distributed&lt;/PortgroupType&gt;')
                [System.String]::Concat('    &lt;UniqueID&gt;',$hostid,':',$thisvpgd.Key,'&lt;/UniqueID&gt;')
                [System.String]::Concat('    &lt;PortgroupID&gt;',$thisvpgd.Key,'&lt;/PortgroupID&gt;')
                # VlanID is blank for -Distributed 
                [System.String]::Concat('    &lt;VlanID&gt;&lt;/VlanID&gt;')
                [System.String]::Concat('    &lt;ClusterID&gt;',$clusters.( $hostid ),'&lt;/ClusterID&gt;')
                [System.String]::Concat('    &lt;VMHostID&gt;',$hostid,'&lt;/VMHostID&gt;')
                [System.String]::Concat('    &lt;vSwitchID&gt;',$vswitch_id,'&lt;/vSwitchID&gt;')
                [System.String]::Concat('    &lt;vSwitchUUID&gt;',$uuid,'&lt;/vSwitchUUID&gt;')
                Write-Output '  &lt;/row&gt;'
              }
            } 
          }
        }
      }
    }
  } # end Distributed Networks

  $end = get-date

  Write-Output "  &lt;meta&gt;"  
  Write-Output "    &lt;startTime&gt;$start&lt;/startTime&gt;"  
  Write-Output "    &lt;startCollectTime&gt;$startcollect&lt;/startCollectTime&gt;"  
  Write-Output "    &lt;endTime&gt;$end&lt;/endTime&gt;"  
  Write-Output "    &lt;numRowsStandard&gt;$standard_rowcount&lt;/numRowsStandard&gt;"  
  Write-Output "    &lt;numRowsDistributed&gt;$distributed_rowcount&lt;/numRowsDistributed&gt;"  
  Write-Output "    &lt;numRows&gt;$rowcount&lt;/numRows&gt;"  
  Write-Output "  &lt;/meta&gt;"  

  Write-Output '&lt;/results&gt;'
}

finally {
  disconnect-VIServer -Confirm:$false *
}


</HardcodedValue>
          </Script>
          <Arguments>
            <SubstitutableObject xsi:type="SubstitutableString">
              <FormattedCode>{0}</FormattedCode>
              <References>
                <VariableReference xsi:type="PropertyReference">
                  <DisplayPath>Process.Target.Virtual Center/ESX Server Name</DisplayPath>
                  <LinkChain>
                    <Link xsi:type="PropertyNameLink">
                      <PropertyName>ResolvedTarget</PropertyName>
                    </Link>
                    <Link xsi:type="PropertyNameLink">
                      <PropertyName>VIServer</PropertyName>
                    </Link>
                  </LinkChain>
                  <ObjectType>ProcessInstance</ObjectType>
                </VariableReference>
              </References>
            </SubstitutableObject>
            <SubstitutableObject xsi:type="SubstitutableString">
              <FormattedCode>{0}</FormattedCode>
              <References>
                <VariableReference xsi:type="PropertyReference">
                  <DisplayPath>Process.Target.Properties.vSphere.Service.vCenter.Protocol</DisplayPath>
                  <LinkChain>
                    <Link xsi:type="PropertyNameLink">
                      <PropertyName>ResolvedTarget</PropertyName>
                    </Link>
                    <Link xsi:type="ObjectReferenceLink">
                      <ObjectLink>
                        <Id>66e4ade1-88c5-406f-b6d6-835f9492f53e</Id>
                        <ObjectType>PropertyExtension</ObjectType>
                      </ObjectLink>
                    </Link>
                  </LinkChain>
                  <ObjectType>ProcessInstance</ObjectType>
                </VariableReference>
              </References>
            </SubstitutableObject>
            <SubstitutableObject xsi:type="SubstitutableString">
              <FormattedCode>{0}</FormattedCode>
              <References>
                <VariableReference xsi:type="PropertyReference">
                  <DisplayPath>Process.Target.Virtual Center/ESX Server Service Port</DisplayPath>
                  <LinkChain>
                    <Link xsi:type="PropertyNameLink">
                      <PropertyName>ResolvedTarget</PropertyName>
                    </Link>
                    <Link xsi:type="PropertyNameLink">
                      <PropertyName>VIPort</PropertyName>
                    </Link>
                  </LinkChain>
                  <ObjectType>ProcessInstance</ObjectType>
                </VariableReference>
              </References>
            </SubstitutableObject>
            <SubstitutableObject xsi:type="SubstitutableString">
              <FormattedCode>{0}</FormattedCode>
              <References>
                <VariableReference xsi:type="PropertyReference">
                  <DisplayPath>Process.Target.Properties.vSphere.Service.vCenter.User</DisplayPath>
                  <LinkChain>
                    <Link xsi:type="PropertyNameLink">
                      <PropertyName>ResolvedTarget</PropertyName>
                    </Link>
                    <Link xsi:type="ObjectReferenceLink">
                      <ObjectLink>
                        <Id>88419c62-0274-4851-b74a-cafd84acd332</Id>
                        <ObjectType>PropertyExtension</ObjectType>
                      </ObjectLink>
                    </Link>
                  </LinkChain>
                  <ObjectType>ProcessInstance</ObjectType>
                </VariableReference>
              </References>
            </SubstitutableObject>
            <SubstitutableObject xsi:type="SubstitutableEncryptedString">
              <FormattedCode>{0}</FormattedCode>
              <References>
                <VariableReference xsi:type="PropertyReference">
                  <DisplayPath>Process.Target.Properties.vSphere.Service.vCenter.Password</DisplayPath>
                  <LinkChain>
                    <Link xsi:type="PropertyNameLink">
                      <PropertyName>ResolvedTarget</PropertyName>
                    </Link>
                    <Link xsi:type="ObjectReferenceLink">
                      <ObjectLink>
                        <Id>be861155-a06b-4488-ade5-78daa2e6029f</Id>
                        <ObjectType>PropertyExtension</ObjectType>
                      </ObjectLink>
                    </Link>
                  </LinkChain>
                  <ObjectType>ProcessInstance</ObjectType>
                </VariableReference>
              </References>
            </SubstitutableObject>
            <SubstitutableObject xsi:type="SubstitutableString">
              <FormattedCode>{0}</FormattedCode>
              <References>
                <VariableReference xsi:type="PropertyReference">
                  <DisplayPath>Process.Variables.Input.Datacenter</DisplayPath>
                  <LinkChain />
                  <ObjectId>1c63afec-33fe-444f-9ad1-930f705ff50d</ObjectId>
                  <ObjectType>GlobalVariable</ObjectType>
                </VariableReference>
              </References>
            </SubstitutableObject>
          </Arguments>
          <Use32BitPowerShell>false</Use32BitPowerShell>
        </Configuration>
      </ActivityNode>
      <ActivityNode xsi:type="ConditionBranchNode">
        <Id>f4906a2a-8361-4712-ae56-ef631578fea5</Id>
        <DisplayName>Handle Exception</DisplayName>
        <Children>
          <ActivityNode xsi:type="CompletedNode">
            <Id>992639bc-6fb5-4a8e-9099-8e19d1a94c9f</Id>
            <CompletedType>Failed</CompletedType>
            <ResultMessage>
              <FormattedCode>{0}</FormattedCode>
              <References>
                <VariableReference xsi:type="PropertyReference">
                  <DisplayPath>Workflow.Execute PowerCLI.Output</DisplayPath>
                  <LinkChain>
                    <Link xsi:type="PropertyNameLink">
                      <PropertyName>Output</PropertyName>
                    </Link>
                  </LinkChain>
                  <ObjectId>639272c7-74a8-4945-88dc-2a2c3cfddd28</ObjectId>
                  <ObjectType>ActivityInstance</ObjectType>
                </VariableReference>
              </References>
            </ResultMessage>
          </ActivityNode>
        </Children>
        <Condition>
          <Id>be4124d8-a387-44ac-a6bb-52a8d4d12ec5</Id>
          <Conditions>
            <ConditionDefinition xsi:type="VariableConditionDefinition">
              <Id>1e280ce3-6d79-4f84-9a12-682e26c18110</Id>
              <Expression xsi:type="SubstitutableString">
                <HardcodedValue>*Error Information*</HardcodedValue>
              </Expression>
              <Comparison>Wildcard</Comparison>
              <VariableReference xsi:type="PropertyReference">
                <DisplayPath>Workflow.Execute PowerCLI.Output</DisplayPath>
                <LinkChain>
                  <Link xsi:type="PropertyNameLink">
                    <PropertyName>Output</PropertyName>
                  </Link>
                </LinkChain>
                <ObjectId>639272c7-74a8-4945-88dc-2a2c3cfddd28</ObjectId>
                <ObjectType>ActivityInstance</ObjectType>
              </VariableReference>
            </ConditionDefinition>
            <ConditionDefinition xsi:type="VariableConditionDefinition">
              <Id>b5787498-4555-43a3-95ae-7e90933e7def</Id>
              <Expression xsi:type="SubstitutableString">
                <HardcodedValue>*Category:*</HardcodedValue>
              </Expression>
              <Comparison>Wildcard</Comparison>
              <VariableReference xsi:type="PropertyReference">
                <DisplayPath>Workflow.Execute PowerCLI.Output</DisplayPath>
                <LinkChain>
                  <Link xsi:type="PropertyNameLink">
                    <PropertyName>Output</PropertyName>
                  </Link>
                </LinkChain>
                <ObjectId>639272c7-74a8-4945-88dc-2a2c3cfddd28</ObjectId>
                <ObjectType>ActivityInstance</ObjectType>
              </VariableReference>
            </ConditionDefinition>
          </Conditions>
        </Condition>
      </ActivityNode>
      <ActivityNode xsi:type="ExecuteActivityNode">
        <Id>01d36dad-1993-4f41-8a7c-8af86340bb64</Id>
        <DisplayName>Set Result Table XML</DisplayName>
        <Children>
          <ActivityNode xsi:type="FailedBranchPlaceholderNode">
            <Id>cc1a457b-c12f-42db-8546-3cf64f021ba8</Id>
            <ActivityNodeId>01d36dad-1993-4f41-8a7c-8af86340bb64</ActivityNodeId>
            <CompletedId>ee1eb190-f41b-4f4c-b290-2b228fefcd23</CompletedId>
          </ActivityNode>
        </Children>
        <Configuration xsi:type="SetVariableActivityConfiguration" xml:space="preserve">
          <Id>01d36dad-1993-4f41-8a7c-8af86340bb64</Id>
          <DisplayName>Set Result Table XML</DisplayName>
          <TargetLoadBalancer xsi:type="SingleTargetLoadBalancer">
            <SingleTargetId>
              <HardcodedValue>bd4b3145-4e20-42bb-ba8f-34c013ca86cc</HardcodedValue>
            </SingleTargetId>
          </TargetLoadBalancer>
          <InheritTarget>false</InheritTarget>
          <ContainingProcessId>7d3fcc89-299d-4f93-bf85-791085224602</ContainingProcessId>
          <VariableToSet>
            <DisplayPath>Process.Variables.Output.Result Table XML</DisplayPath>
            <LinkChain />
            <ObjectId>2e472452-12bf-4987-b29c-6cad42800db7</ObjectId>
            <ObjectType>GlobalVariable</ObjectType>
          </VariableToSet>
          <NewValue xsi:type="SubstitutableString">
            <FormattedCode>{0}</FormattedCode>
            <References>
              <VariableReference xsi:type="PropertyReference">
                <DisplayPath>Workflow.Execute PowerCLI.Output</DisplayPath>
                <LinkChain>
                  <Link xsi:type="PropertyNameLink">
                    <PropertyName>Output</PropertyName>
                  </Link>
                </LinkChain>
                <ObjectId>639272c7-74a8-4945-88dc-2a2c3cfddd28</ObjectId>
                <ObjectType>ActivityInstance</ObjectType>
              </VariableReference>
            </References>
          </NewValue>
        </Configuration>
      </ActivityNode>
      <ActivityNode xsi:type="ExecuteActivityNode">
        <Id>d862b138-0af6-475a-9b07-701a4c03c497</Id>
        <DisplayName>Verify a Complete XML</DisplayName>
        <Children>
          <ActivityNode xsi:type="ConditionBranchNode">
            <Id>1d40ce7f-fd9e-414d-996f-a3734825981d</Id>
            <Notes>If this execution fails, execute the contained workflow nodes.</Notes>
            <DisplayName>If Execution Fails</DisplayName>
            <Children>
              <ActivityNode xsi:type="ExecuteActivityNode">
                <Id>2dfdff89-acd6-4a21-a9eb-7ebd9a994f98</Id>
                <DisplayName>Complete XML (results)</DisplayName>
                <Children>
                  <ActivityNode xsi:type="FailedBranchPlaceholderNode">
                    <Id>5ab9f095-b6cc-416f-8e72-b5c0d38b084c</Id>
                    <ActivityNodeId>2dfdff89-acd6-4a21-a9eb-7ebd9a994f98</ActivityNodeId>
                    <CompletedId>a8c5e63d-108d-4a6a-80a7-cc04950042cf</CompletedId>
                  </ActivityNode>
                </Children>
                <Configuration xsi:type="SetMultipleVariableActivityConfiguration" xml:space="preserve">
                  <Id>2dfdff89-acd6-4a21-a9eb-7ebd9a994f98</Id>
                  <DisplayName>Complete XML (results)</DisplayName>
                  <TargetLoadBalancer xsi:type="SingleTargetLoadBalancer">
                    <SingleTargetId>
                      <HardcodedValue>bd4b3145-4e20-42bb-ba8f-34c013ca86cc</HardcodedValue>
                    </SingleTargetId>
                  </TargetLoadBalancer>
                  <InheritTarget>false</InheritTarget>
                  <ContainingProcessId>7d3fcc89-299d-4f93-bf85-791085224602</ContainingProcessId>
                  <Assignments>
                    <PropertyReferenceValuePair>
                      <VariableToSet>
                        <DisplayPath>Process.Variables.Output.Result Table XML</DisplayPath>
                        <LinkChain />
                        <ObjectId>2e472452-12bf-4987-b29c-6cad42800db7</ObjectId>
                        <ObjectType>GlobalVariable</ObjectType>
                      </VariableToSet>
                      <NewValue xsi:type="SubstitutableString">
                        <FormattedCode>{0}&lt;/results&gt;</FormattedCode>
                        <References>
                          <VariableReference xsi:type="PropertyReference">
                            <DisplayPath>Process.Variables.Output.Result Table XML</DisplayPath>
                            <LinkChain />
                            <ObjectId>2e472452-12bf-4987-b29c-6cad42800db7</ObjectId>
                            <ObjectType>GlobalVariable</ObjectType>
                          </VariableReference>
                        </References>
                      </NewValue>
                    </PropertyReferenceValuePair>
                    <PropertyReferenceValuePair>
                      <VariableToSet>
                        <DisplayPath>Process.Variables.Local.XML State</DisplayPath>
                        <LinkChain />
                        <ObjectId>163eabef-55b2-44b0-b01e-caed9995da8b</ObjectId>
                        <ObjectType>GlobalVariable</ObjectType>
                      </VariableToSet>
                      <NewValue xsi:type="SubstitutableBoolean">
                        <HardcodedValue>false</HardcodedValue>
                      </NewValue>
                    </PropertyReferenceValuePair>
                  </Assignments>
                </Configuration>
              </ActivityNode>
            </Children>
            <Condition>
              <Id>0533d471-4273-49b3-93d1-c01c20219d9d</Id>
              <Conditions>
                <ConditionDefinition xsi:type="VariableConditionDefinition">
                  <Id>2a519b7c-0630-4bbb-8c8b-733bad9f34f4</Id>
                  <Expression xsi:type="SubstitutableBoolean">
                    <HardcodedValue>true</HardcodedValue>
                  </Expression>
                  <Comparison>Equals</Comparison>
                  <VariableReference xsi:type="PropertyReference">
                    <LinkChain>
                      <Link xsi:type="PropertyNameLink">
                        <PropertyName>InstanceFailed</PropertyName>
                      </Link>
                    </LinkChain>
                    <ObjectId>d862b138-0af6-475a-9b07-701a4c03c497</ObjectId>
                    <ObjectType>ActivityInstance</ObjectType>
                  </VariableReference>
                </ConditionDefinition>
              </Conditions>
            </Condition>
          </ActivityNode>
        </Children>
        <Configuration xsi:type="XPathQueryActivityConfiguration" xml:space="preserve">
          <Id>d862b138-0af6-475a-9b07-701a4c03c497</Id>
          <DisplayName>Verify a Complete XML</DisplayName>
          <TargetLoadBalancer xsi:type="SingleTargetLoadBalancer">
            <SingleTargetId>
              <HardcodedValue>bd4b3145-4e20-42bb-ba8f-34c013ca86cc</HardcodedValue>
            </SingleTargetId>
          </TargetLoadBalancer>
          <InheritTarget>false</InheritTarget>
          <ContainingProcessId>7d3fcc89-299d-4f93-bf85-791085224602</ContainingProcessId>
          <SourceXml>
            <FormattedCode>{0}</FormattedCode>
            <References>
              <VariableReference xsi:type="PropertyReference">
                <DisplayPath>Workflow.Execute PowerCLI.Output</DisplayPath>
                <LinkChain>
                  <Link xsi:type="PropertyNameLink">
                    <PropertyName>Output</PropertyName>
                  </Link>
                </LinkChain>
                <ObjectId>639272c7-74a8-4945-88dc-2a2c3cfddd28</ObjectId>
                <ObjectType>ActivityInstance</ObjectType>
              </VariableReference>
            </References>
          </SourceXml>
          <Namespaces />
          <Queries>
            <XPathQueryDefinition>
              <DisplayName>sanityMark</DisplayName>
              <Query>
                <HardcodedValue>//sanityMark</HardcodedValue>
              </Query>
              <ReturnType>String</ReturnType>
              <DefaultBehavior>Fail</DefaultBehavior>
            </XPathQueryDefinition>
          </Queries>
        </Configuration>
      </ActivityNode>
      <ActivityNode xsi:type="ConditionBranchNode">
        <Id>85e9d268-ef0c-4aaf-9f86-49a3f7711b9b</Id>
        <DisplayName>If XML was Repaired</DisplayName>
        <Children>
          <ActivityNode xsi:type="ExecuteActivityNode">
            <Id>083921c0-0b2b-401f-bacc-eb504057360e</Id>
            <DisplayName>XPath Query</DisplayName>
            <Children>
              <ActivityNode xsi:type="FailedBranchPlaceholderNode">
                <Id>c08ab2c4-727d-4dd1-ae7c-24a94173a670</Id>
                <ActivityNodeId>083921c0-0b2b-401f-bacc-eb504057360e</ActivityNodeId>
                <CompletedId>005339e0-21b5-4ebd-bbd3-7a5c927080a3</CompletedId>
              </ActivityNode>
            </Children>
            <Configuration xsi:type="XPathQueryActivityConfiguration" xml:space="preserve">
              <Id>083921c0-0b2b-401f-bacc-eb504057360e</Id>
              <DisplayName>XPath Query</DisplayName>
              <TargetLoadBalancer xsi:type="SingleTargetLoadBalancer">
                <SingleTargetId>
                  <HardcodedValue>bd4b3145-4e20-42bb-ba8f-34c013ca86cc</HardcodedValue>
                </SingleTargetId>
              </TargetLoadBalancer>
              <InheritTarget>false</InheritTarget>
              <ContainingProcessId>7d3fcc89-299d-4f93-bf85-791085224602</ContainingProcessId>
              <SourceXml>
                <FormattedCode>{0}</FormattedCode>
                <References>
                  <VariableReference xsi:type="PropertyReference">
                    <DisplayPath>Process.Variables.Output.Result Table XML</DisplayPath>
                    <LinkChain />
                    <ObjectId>2e472452-12bf-4987-b29c-6cad42800db7</ObjectId>
                    <ObjectType>GlobalVariable</ObjectType>
                  </VariableReference>
                </References>
              </SourceXml>
              <Namespaces />
              <Queries>
                <XPathQueryDefinition>
                  <DisplayName>sanityMark</DisplayName>
                  <Query>
                    <HardcodedValue>//sanityMark</HardcodedValue>
                  </Query>
                  <ReturnType>String</ReturnType>
                  <DefaultBehavior>Fail</DefaultBehavior>
                </XPathQueryDefinition>
              </Queries>
            </Configuration>
          </ActivityNode>
        </Children>
        <Condition>
          <Id>49acf1bf-e0f7-4dfd-bcda-70a3b6df967d</Id>
          <Conditions>
            <ConditionDefinition xsi:type="VariableConditionDefinition">
              <Id>ef2665fc-c797-43a9-9b46-84c2e4f4b87d</Id>
              <Expression xsi:type="SubstitutableBoolean">
                <HardcodedValue>false</HardcodedValue>
              </Expression>
              <Comparison>Equals</Comparison>
              <VariableReference xsi:type="PropertyReference">
                <DisplayPath>Process.Variables.Local.XML State</DisplayPath>
                <LinkChain />
                <ObjectId>163eabef-55b2-44b0-b01e-caed9995da8b</ObjectId>
                <ObjectType>GlobalVariable</ObjectType>
              </VariableReference>
            </ConditionDefinition>
          </Conditions>
        </Condition>
      </ActivityNode>
    </Children>
  </FirstActivity>
  <ProcessId>7d3fcc89-299d-4f93-bf85-791085224602</ProcessId>
</WorkflowConfiguration>